AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a VPC for Kali Linux Purple SOC Lab 
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: VPC CIDR
        Parameters:
          - KaliVPCNetCIDR
      - Label:
          default: Kali Subnet CIDR
        Parameters:
          - PublicSubnetCIDR
          - LANSubnetCIDR
          - SOCSubnetCIDR
          - PurpleSubnetCIDR
          - EminenceSubnetCIDR
      - Label:
          default: SSH CIDR
        Parameters:
          - SSHLocation
                    
Parameters:
  SSHLocation:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to access the web server using SSH.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  KaliVPCNetCIDR:
    Default: 192.168.0.0/16
    Description: Please Enter the IP Range of the VPC
    Type: String
  PublicSubnetCIDR:
    Default: 192.168.0.0/24
    Description: Please Enter the IP Range of the Private Subnet
    Type: String
  LANSubnetCIDR:
    Default: 192.168.1.0/24
    Description: Please Enter the IP Range of the Public Subnet
    Type: String
  SOCSubnetCIDR:
    Default: 192.168.2.0/24
    Description: Please Enter the IP Range of the DMZ Subnet
    Type: String
      
    
Resources:
  KaliVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref KaliVPCNetCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: KaliVPC

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public
      VpcId: !Ref KaliVPC
          
  LANSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref LANSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: LAN Subnet
      VpcId: !Ref KaliVPC

  SOCSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref SOCSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Violet Subnet
      VpcId: !Ref KaliVPC

   IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  IGWAttacment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref KaliVPC
      InternetGatewayId: !Ref IGW

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: PublicRouteTable
      VpcId: !Ref KaliVPC

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
      
  SSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SSH Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref SSHLocation  
      Tags:
        - Key: Name
          Value: SSH Security Group
      VpcId: !Ref KaliVPC

  LANNI:  
    Type: 'AWS::EC2::NetworkInterface'
    Properties: 
      Description: Network Interface for LAN
      SourceDestCheck: false
      SubnetId: !Ref LANSubnet
      GroupSet:
        - !Ref SSHSecurityGroup
      PrivateIpAddress: 192.168.1.10        
      Tags: 
        - Key: Name
          Value: Byzantium | LAN Subnet          
  SOCNI:  
    Type: 'AWS::EC2::NetworkInterface'
    Properties: 
      Description: Network Interface for SOC
      SubnetId: !Ref SOCSubnet
      Tags: 
        - Key: Name
          Value: Byzantium | SOC Subnet
   
Outputs:
  KaliVPC:
    Description: KaliVPC ID
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
    Value: !Ref KaliVPC
  PublicSubnet:
    Description: Public ID
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet'
    Value: !Ref PublicSubnet
  LANSubnet:
    Description: LANSubnet ID
    Export:
      Name: !Sub '${AWS::StackName}-LANSubnet'
    Value: !Ref LANSubnet 
  SOCSubnet:
    Description: SOCSubnet ID
    Export:
      Name: !Sub '${AWS::StackName}-SOCSubnet'
    Value: !Ref SOCSubnet    
  LANNI:
    Description: Network Interface for LAN
    Export:
      Name: !Sub '${AWS::StackName}-LANNI'
    Value: !Ref LANNI  
  SOCNI:
    Description: Network Interface for SOC
    Export:
      Name: !Sub '${AWS::StackName}-SOCNI'
    Value: !Ref SOCNI         
  SSHSecurityGroup:
    Description: SSHSecurityGroup ID
    Export:
      Name: !Sub '${AWS::StackName}-SSHSecurityGroup'
    Value: !Ref SSHSecurityGroup   
    
