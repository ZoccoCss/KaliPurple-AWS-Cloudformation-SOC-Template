AWSTemplateFormatVersion: 2010-09-09

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network
        Parameters:
          - ExportVPCStackName
          - KeyName   
          - CreateNATGateway
          - CreateLoadBalancer
      - Label:
          default: SSM
        Parameters:
          - SSMRoleName
          - SSMRoleNameGuacamole
      - Label:
          default: Kali Purple Parameters
        Parameters:
          - CreateKaliPurple
          - InstKaliPurple
          - AmazonImageIDKaliPurple
      - Label:
          default: Kali Heliotrope Parameters
        Parameters:
          - CreateKaliHeliotrope
          - InstHeliotrope
          - AmazonImageIDKaliHeliotrope
      - Label:
          default: Kali Guacamole Parameters
        Parameters:
          - CreateKaliGuacamole
          - InstanceTypeGuacamole
          - AmazonImageIDGuacamole
      - Label:
          default: Kali Byzantium Parameters
        Parameters:
          - CreateKaliByzantium
          - InstanceTypeByzantium
          - AmazonImageIDByzantium
          - LANInterface

Parameters:
  ExportVPCStackName:
    Description: Name of the Stack that Created the Kali Purple VPC
    Type: String
    Default: vpc
        
  SSMRoleName:
    Description: Name of the IAM Role for SSM Management of the EC2 Instance
    Type: String   
    Default: KaliPurpleSSMFullAccess
    
  SSMRoleNameGuacamole:
    Description: Name of the IAM Role for SSM Management of the EC2 Instance
    Type: String   
    Default: KaliPurpleGuacamole
      
  InstKaliPurple:
    Description: Kali Purple EC2 instance type
    Type: String
    Default: m4.xlarge
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.        

  InstHeliotrope:
    Description: Kali Heliotrope EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.    
    
    
  InstanceTypeGuacamole:
    Description: Guacamole EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.       
    
  InstanceTypeByzantium:
    Description: Byzantium EC2 instance type
    Type: String
    Default: m3.large
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.     
    
  CreateKaliPurple:
    Description: Launch Instance
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.
    
  CreateKaliHeliotrope:
    Description: Launch Instance
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.
    
  CreateKaliByzantium:
    Description: Launch Instance
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.
    
  CreateKaliGuacamole:
    Description: Launch Instance
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.    
    
  LANInterface:
    Description: Whether or not attach the LAN Interface
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false. 
    
  CreateNATGateway:
    Description: Create a NAT Gateway
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.  
    
  CreateLoadBalancer:
    Description: Create a Load Balancer
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.      
    
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: parawin

  AmazonImageIDKaliPurple:
    Description: The ID of the Amazon machine image (AMI) - Default is Kali
    Type: String
    Default: ami-000db6736082f3ee9
    
  AmazonImageIDKaliHeliotrope:
    Description: The ID of the Amazon machine image (AMI) - Default is Kali
    Type: String
    Default: ami-000db6736082f3ee9
    
  AmazonImageIDGuacamole:
    Description: The ID of the Amazon machine image (AMI) - Bastion - Default is Guacamole
    Type: String
    Default: ami-0d15b4289190035e4  
    
  AmazonImageIDByzantium:
    Description: The ID of the Amazon machine image (AMI) - Bastion - Default is OPNSense
    Type: String
    Default: ami-02d8b8fcc683ef5cc  
 
Conditions:
  CreateKaliPurpleCondition: !Equals 
    - !Ref CreateKaliPurple
    - true
  CreateKaliHeliotropeCondition: !Equals 
    - !Ref CreateKaliHeliotrope
    - true
  CreateKaliGuacamoleCondition: !Equals 
    - !Ref CreateKaliGuacamole
    - true
  CreateKaliByzantiumCondition: !Equals 
    - !Ref CreateKaliByzantium
    - true
  AttachLANInterface: !Equals 
    - !Ref LANInterface
    - true
  CreateNATGatewayCondition: !Equals 
    - !Ref CreateNATGateway
    - true
  CreateLoadBalancerCondition: !Equals 
    - !Ref CreateLoadBalancer
    - true    
    
Resources:
  NATGatewayEIP:
    Type: 'AWS::EC2::EIP'
    Condition: CreateNATGatewayCondition
    Properties:
      Domain: VPC
      Tags:
        - Key: Name
          Value: NatEIP

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Condition: CreateNATGatewayCondition
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: 
        Fn::ImportValue: !Sub ${ExportVPCStackName}-PublicSubnet
      Tags:
        - Key: Name
          Value: NAT Gateway Public Subnet

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Condition: CreateNATGatewayCondition    
    Properties:
      Tags:
        - Key: Name
          Value: Private Route Table 
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVPCStackName}-VPC

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Condition: CreateNATGatewayCondition
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable

  PrivateRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Condition: CreateNATGatewayCondition
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId:  
        Fn::ImportValue: !Sub ${ExportVPCStackName}-LANSubnet

  KaliPurple:
    Type: AWS::EC2::Instance
    Condition: CreateKaliPurpleCondition      
    Properties:
      InstanceType: !Ref InstKaliPurple
      IamInstanceProfile: !Ref SSMRoleName
      SubnetId:  
        Fn::ImportValue: !Sub ${ExportVPCStackName}-LANSubnet  
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ExportVPCStackName}-SSHSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageIDKaliPurple 
      Tags:
        - Key: Name
          Value: EC2 | Kali-Purple
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash 
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config   
            service sshd restart
            echo 'kali:kali2023' | chpasswd #Change Password Later
            sleep 15s # Waits 15 seconds.
            apt-get update -y
            apt-get install -y apache2
            echo "Healthy" > /var/www/html/index.html
            echo "Hello Friends, Welcome to ec2 server whose IP is $(hostname -f)" > /var/www/html/test/index.html            
            systemctl start apache2  
            apt-get install xrdp -y
            systemctl enable xrdp --now
                       
            
        
  KaliHeliotrope:
    Type: AWS::EC2::Instance
    Condition: CreateKaliHeliotropeCondition    
    Properties:
      BlockDeviceMappings: 
        - 
          DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 2048  
      InstanceType: !Ref InstHeliotrope
      IamInstanceProfile: !Ref SSMRoleName
      SubnetId:  
        Fn::ImportValue: !Sub ${ExportVPCStackName}-PublicSubnet
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ExportVPCStackName}-SSHSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageIDKaliHeliotrope 
      Tags:
        - Key: Name
          Value: EC2 | Kali-Heliotrope
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install -y apache2
            echo "Healthy" > /var/www/html/index.html
            systemctl start apache2  
            apt-get install xrdp -y
            systemctl enable xrdp --now
            wget -P /etc/polkit-1/localauthority/50-local.d https://gitlab.com/kalilinux/documentation/kali-purple/-/raw/main/1001_kali-heliotrope/overlays/etc/polkit-1/localauthority/50-local.d/45-allow-colord.pkla
            apt-get install kali-autopilot -y
            apt-get install -y rsyslog
            mkdir /tmp/ssm
            cd /tmp/ssm
            wget https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/debian_amd64/amazon-ssm-agent.deb
            dpkg -i amazon-ssm-agent.deb
            systemctl enable amazon-ssm-agent
            systemctl start amazon-ssm-agent
            
            
  GuacamoleBastion:
    Type: AWS::EC2::Instance
    Condition: CreateKaliGuacamoleCondition    
    Properties:
      InstanceType: !Ref InstanceTypeGuacamole
      IamInstanceProfile: !Ref SSMRoleNameGuacamole
      SubnetId:  
        Fn::ImportValue: !Sub ${ExportVPCStackName}-PublicSubnet
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ExportVPCStackName}-SSHSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageIDGuacamole 
      Tags:
        - Key: Name
          Value: EC2 | Guacamole Bastion
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            apt-get update -y
           
  Byzantium:
    Type: AWS::EC2::Instance
    Condition: CreateKaliByzantiumCondition    
    Properties:
      BlockDeviceMappings: 
        - 
          DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 128  
      InstanceType: !Ref InstanceTypeByzantium
      IamInstanceProfile: !Ref SSMRoleName
      SubnetId:  
        Fn::ImportValue: !Sub ${ExportVPCStackName}-PublicSubnet
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ExportVPCStackName}-SSHSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageIDByzantium 
      Tags:
        - Key: Name
          Value: EC2 | Byzantium
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash

  ByzLANAttachmnet:            
    Type: AWS::EC2::NetworkInterfaceAttachment
    Condition: AttachLANInterface
    Properties: 
      InstanceId: !Ref Byzantium
      DeviceIndex: 1
      NetworkInterfaceId: 
        Fn::ImportValue: !Sub ${ExportVPCStackName}-LANNI    
        
  TargetGroupKaliPurple:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Condition: CreateKaliPurpleCondition    
    Properties:
      Port: 80                               # Change to 5601
      Protocol: HTTP
      VpcId: !Sub ${ExportVPCStackName}-VPC

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Condition: CreateLoadBalancerCondition
    Properties:
      Scheme: internal
      Subnets:
        - !Sub ${ExportVPCStackName}-LANSubnet

         
